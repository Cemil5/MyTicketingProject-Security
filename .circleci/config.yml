version: 2

jobs:
#  test:
#    docker:
#      - image: cimg/openjdk:17.0.1
#        auth:
#          username: mydockerhub-user
#          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
#    steps:
#      - checkout
#      - run: ./mvnw test

  build:
    docker:
      image: cimg/openjdk:11-jdk
#        auth:
#          username: mydockerhub-user
#          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
#      docker hub working :
      working_directory: /tmp/workspace
      environment:
#        customize the JVM maximum heap limit
        MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
#      - run: ./mvnw -Dmaven.test.skip=true package
      - run: mkdir -p /tmp/workspace
#        download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: mvn dependency:go-offline
      - run: mvn clean install -DskipTests
      - save_cache:
          paths:
            -~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: /tmp/workspace
          paths: .
  docker-image-and-publish:
    machine: true
    steps:
      -attach_workspace:
        at: /tmp/workspace
      -run:
        ls -a /tmp/workspace
        name: Create Docker image and push to Docker hub
        command: docker login -u $DOCKER_LOGIN --password $DOCKER_PWD && docker build -t 589866/my-ticketing-application /tmp/workspace/ && docker push 589866/my-ticketing-application
  deploy-job:
    docker:
      -image: circleci/node:10.0.0
    steps:
      -run:
        name: Execute Deployment Script
        command:
          ssh -o "StrictHostKeyChecking no" ec2-3-80-82-122.compute-1.amazonaws.com <<'ENDSSH' 
          /bin/bash bin/deploy_image.sh 
          docker ps


workflows:
  version: 2

  build-then-test:
    jobs:
      - build
      - docker-image-and-publish:
          - requires:
              - build
      - deploy-job:
          - requires:
              - docker-image-and-publish
#      - test:
#          requires:
#            - build



# https://circleci.com/docs/2.0/language-java-maven/